/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Articulo;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-09-17T20:30:04.433Z")

@Api(value = "articulo", description = "the articulo API")
public interface ArticuloApi {

    @ApiOperation(value = "Encuentra articulo por su  ID", nickname = "getArticuloById", notes = "Regresa un simple artiuclo", response = Articulo.class, tags={ "articulo", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Articulo.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Articulo no encontrado") })
    @RequestMapping(value = "/articulo/{articuloId}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Articulo> getArticuloById(@ApiParam(value = "ID del articulo a regresar",required=true) @PathVariable("articuloId") String articuloId);


    @ApiOperation(value = "Actualiza un articulo", nickname = "updateArticuloWithForm", notes = "", tags={ "articulo", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/articulo/{articuloId}",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateArticuloWithForm(@ApiParam(value = "ID para articulo se necesita",required=true) @PathVariable("articuloId") String articuloId,@ApiParam(value = "Actualiza la descripcion del articulo") @RequestParam(value="descripcion", required=false)  String descripcion,@ApiParam(value = "Actualiza el modelo del articulo") @RequestParam(value="modelo", required=false)  String modelo);

}
